name: Build & Deploy (AsciiDoc → Pages)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Enable Pages and get metadata
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'

      - name: Install Asciidoctor (and optional extras)
        run: |
          gem install asciidoctor
          # Uncomment if you want diagrams / syntax highlighting:
          # gem install asciidoctor-diagram rouge

      - name: Build AsciiDoc → HTML
        run: |
          mkdir -p build
          # Convert every .adoc under docs/ to build/, mirroring structure
          find docs -name '*.adoc' -type f -print0 | while IFS= read -r -d '' f; do
            out="build/${f#docs/}"
            out="${out%.*}.html"
            mkdir -p "$(dirname "$out")"
            asciidoctor "$f" -o "$out"
          done
          # Ensure a landing page exists at /index.html
          if [ -f build/index.html ]; then
            :
          elif [ -f build/index.adoc ]; then
            asciidoctor build/index.adoc -o build/index.html
          elif [ -f build/README.html ]; then
            mv build/README.html build/index.html
          fi

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v4
        with:
          path: build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
